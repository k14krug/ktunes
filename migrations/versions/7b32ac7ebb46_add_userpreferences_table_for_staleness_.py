"""Add UserPreferences table for staleness notification settings

Revision ID: 7b32ac7ebb46
Revises: 295ace8120a8
Create Date: 2025-08-01 18:56:39.612039

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7b32ac7ebb46'
down_revision = '295ace8120a8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.drop_index('ix_apscheduler_jobs_next_run_time')

    op.drop_table('apscheduler_jobs')
    op.drop_table('_alembic_tmp_Users')
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)

    with op.batch_alter_table('played_tracks', schema=None) as batch_op:
        batch_op.drop_index('idx_played_tracks_source')
        batch_op.drop_index('idx_played_tracks_source_played_at')

    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('playlist_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('playlist_date',
               existing_type=sa.TEXT(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.alter_column('artist',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('song',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('category',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
        batch_op.alter_column('artist_common_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.drop_index('idx_playlists_artist_song')
        batch_op.drop_index('idx_playlists_name_date')
        batch_op.drop_index('idx_playlists_name_date_position')

    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.drop_index('idx_tracks_date_added')
        batch_op.drop_index('idx_tracks_last_play_dt')
        batch_op.drop_index('idx_tracks_play_cnt')
        batch_op.drop_column('spotify_uri')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('spotify_uri', sa.VARCHAR(), nullable=True))
        batch_op.create_index('idx_tracks_play_cnt', ['play_cnt'], unique=False)
        batch_op.create_index('idx_tracks_last_play_dt', ['last_play_dt'], unique=False)
        batch_op.create_index('idx_tracks_date_added', ['date_added'], unique=False)

    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.create_index('idx_playlists_name_date_position', ['playlist_name', 'playlist_date', 'track_position'], unique=False)
        batch_op.create_index('idx_playlists_name_date', ['playlist_name', 'playlist_date'], unique=False)
        batch_op.create_index('idx_playlists_artist_song', ['artist', 'song'], unique=False)
        batch_op.alter_column('username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('artist_common_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('category',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('song',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('artist',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('playlist_date',
               existing_type=sa.DateTime(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('playlist_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('played_tracks', schema=None) as batch_op:
        batch_op.create_index('idx_played_tracks_source_played_at', ['source', 'played_at'], unique=False)
        batch_op.create_index('idx_played_tracks_source', ['source'], unique=False)

    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('_alembic_tmp_Users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), nullable=False),
    sa.Column('next_run_time', sa.FLOAT(), nullable=True),
    sa.Column('job_state', sa.BLOB(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('apscheduler_jobs', schema=None) as batch_op:
        batch_op.create_index('ix_apscheduler_jobs_next_run_time', ['next_run_time'], unique=False)

    # ### end Alembic commands ###
